# keyboards/students.py
from aiogram import types
from aiogram.utils.keyboard import InlineKeyboardBuilder

def get_students_menu_keyboard():
    builder = InlineKeyboardBuilder()
    
    builder.row(
        types.InlineKeyboardButton(
            text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—á–µ–Ω–∏–∫–∞",
            callback_data="add_student"
        )
    )
    
    builder.row(
        types.InlineKeyboardButton(
            text="üìã –°–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤",
            callback_data="students_list"
        )
    )
    
    builder.row(
        types.InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            callback_data="back_to_main"
        )
    )
    
    return builder.as_markup()

def get_cancel_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(
        types.InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
            callback_data="cancel_operation"
        )
    )
    return builder.as_markup()

# –î–æ–±–∞–≤–∏–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –±—É–¥—É—â–µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
def get_students_list_keyboard():
    builder = InlineKeyboardBuilder()
    
    builder.row(
        types.InlineKeyboardButton(
            text="üìã –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—á–µ–Ω–∏–∫–æ–≤",
            callback_data="all_students"
        )
    )
    
    builder.row(
        types.InlineKeyboardButton(
            text="üë§ –ê–∫—Ç–∏–≤–Ω—ã–µ —É—á–µ–Ω–∏–∫–∏",
            callback_data="active_students"
        )
    )
    
    builder.row(
        types.InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é —É—á–µ–Ω–∏–∫–æ–≤",
            callback_data="back_to_students_menu"
        )
    )
    
    return builder.as_markup()

def get_students_list_keyboard(students, page=0, page_size=5):
    builder = InlineKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É—á–µ–Ω–∏–∫–æ–≤ –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    start_idx = page * page_size
    end_idx = start_idx + page_size
    current_page_students = students[start_idx:end_idx]
    
    for student in current_page_students:
        builder.row(
            types.InlineKeyboardButton(
                text=f"üë§ {student['full_name']}",
                callback_data=f"student_{student['id']}"
            )
        )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if len(students) > page_size:
        navigation_buttons = []
        
        if page > 0:
            navigation_buttons.append(
                types.InlineKeyboardButton(
                    text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                    callback_data=f"students_page_{page-1}"
                )
            )
        
        if end_idx < len(students):
            navigation_buttons.append(
                types.InlineKeyboardButton(
                    text="‚û°Ô∏è –í–ø–µ—Ä–µ–¥",
                    callback_data=f"students_page_{page+1}"
                )
            )
        
        if navigation_buttons:
            builder.row(*navigation_buttons)
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
    builder.row(
        types.InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é —É—á–µ–Ω–∏–∫–æ–≤",
            callback_data="back_to_students_menu"
        )
    )
    
    return builder.as_markup()