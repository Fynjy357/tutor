import logging
import sqlite3
from aiogram import Bot
from datetime import datetime

logger = logging.getLogger(__name__)

class ParentReportHandlers:
    def __init__(self, db):
        self.db = db
    
    async def send_report_to_parent(self, bot: Bot, lesson_id: int, student_id: int):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç—á–µ—Ç —Ä–æ–¥–∏—Ç–µ–ª—é —É—á–µ–Ω–∏–∫–∞"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç—á–µ—Ç–µ –∏ —Ä–æ–¥–∏—Ç–µ–ª–µ
            with self.db.get_connection() as conn:
                conn.row_factory = sqlite3.Row
                cursor = conn.cursor()
                
                cursor.execute('''
                SELECT lr.*, s.full_name as student_name, s.parent_telegram_id,
                       l.lesson_date, l.duration, t.full_name as tutor_name
                FROM lesson_reports lr
                JOIN students s ON lr.student_id = s.id
                JOIN lessons l ON lr.lesson_id = l.id
                JOIN tutors t ON l.tutor_id = t.id
                WHERE lr.lesson_id = ? AND lr.student_id = ?
                ''', (lesson_id, student_id))
                
                report = cursor.fetchone()
                
                if not report:
                    logger.warning(f"‚ùå –û—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: lesson_id={lesson_id}, student_id={student_id}")
                    return
                
                report = dict(report)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ telegram_id —É —Ä–æ–¥–∏—Ç–µ–ª—è
                parent_telegram_id = report.get('parent_telegram_id')
                if not parent_telegram_id:
                    logger.info(f"‚ùå –£ —É—á–µ–Ω–∏–∫–∞ {report['student_name']} –Ω–µ—Ç telegram_id —Ä–æ–¥–∏—Ç–µ–ª—è")
                    return
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª—è
                message = f"üìä –û—Ç—á–µ—Ç –æ –∑–∞–Ω—è—Ç–∏–∏ –¥–ª—è {report['student_name']}\n\n"
                message += f"üìÖ –î–∞—Ç–∞: {report['lesson_date']}\n"
                message += f"‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {report['duration']} –º–∏–Ω\n"
                message += f"üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {report['tutor_name']}\n\n"
                
                # –°—Ç–∞—Ç—É—Å –∑–∞–Ω—è—Ç–∏—è
                if report.get('lesson_held'):
                    message += "‚úÖ –ó–∞–Ω—è—Ç–∏–µ —Å–æ—Å—Ç–æ—è–ª–æ—Å—å\n"
                else:
                    message += "‚ùå –ó–∞–Ω—è—Ç–∏–µ –Ω–µ —Å–æ—Å—Ç–æ—è–ª–æ—Å—å\n"
                    await bot.send_message(chat_id=parent_telegram_id, text=message)
                    return
                
                # –û–ø–ª–∞—Ç–∞
                if report.get('lesson_paid'):
                    message += "üí≥ –ó–∞–Ω—è—Ç–∏–µ –æ–ø–ª–∞—á–µ–Ω–æ\n"
                else:
                    message += "‚ö†Ô∏è –ó–∞–Ω—è—Ç–∏–µ –Ω–µ –æ–ø–ª–∞—á–µ–Ω–æ\n"
                
                # –î–æ–º–∞—à–Ω—è—è —Ä–∞–±–æ—Ç–∞
                if report.get('homework_done'):
                    message += "üìö –î–æ–º–∞—à–Ω—è—è —Ä–∞–±–æ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞\n"
                else:
                    message += "üìù –î–æ–º–∞—à–Ω—è—è —Ä–∞–±–æ—Ç–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞\n"
                
                # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
                performance = report.get('student_performance')
                if performance:
                    message += f"\nüìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:\n{performance}\n"
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª—é
                try:
                    await bot.send_message(
                        chat_id=parent_telegram_id,
                        text=message
                    )
                    logger.info(f"‚úÖ –û—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ä–æ–¥–∏—Ç–µ–ª—é —É—á–µ–Ω–∏–∫–∞ {report['student_name']}")
                    
                except Exception as e:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞ —Ä–æ–¥–∏—Ç–µ–ª—é: {e}")
                    
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –æ—Ç—á–µ—Ç–∞ –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª—è: {e}")
    
    async def send_reports_to_all_parents(self, bot: Bot, lesson_id: int, student_ids: list):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç—á–µ—Ç—ã –≤—Å–µ–º —Ä–æ–¥–∏—Ç–µ–ª—è–º –≥—Ä—É–ø–ø—ã"""
        for student_id in student_ids:
            await self.send_report_to_parent(bot, lesson_id, student_id)