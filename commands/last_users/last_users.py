from aiogram import Router, types
from aiogram.filters import Command
from aiogram.types import Message
from database import db

from commands.config import SUPER_ADMIN_ID

router = Router()

@router.message(Command("last_users"))
async def get_last_registered_users(message: Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–æ–º
    if message.from_user.id != SUPER_ADMIN_ID:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
    
    try:
        with db.get_connection() as conn:
            cursor = conn.cursor()
            
            # –ü–æ–ª—É—á–∞–µ–º 50 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            cursor.execute("""
                SELECT full_name, telegram_id, promo_code, registration_date, status, user_role 
                FROM tutors 
                ORDER BY registration_date DESC 
                LIMIT 50
            """)
            
            users = cursor.fetchall()
            
            if not users:
                await message.answer("‚ùå –í –±–∞–∑–µ –Ω–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
                return
            
            response = "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 50 –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n"
            
            for i, user in enumerate(users, 1):
                full_name, telegram_id, promo_code, registration_date, status, user_role = user
                
                # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
                if registration_date:
                    try:
                        if hasattr(registration_date, 'strftime'):
                            reg_date_str = registration_date.strftime('%d.%m.%Y %H:%M')
                        else:
                            reg_date_str = str(registration_date)
                    except:
                        reg_date_str = str(registration_date)
                else:
                    reg_date_str = "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
                
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ None –∑–Ω–∞—á–µ–Ω–∏—è
                full_name = full_name or "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
                telegram_id = telegram_id or "–ù–µ —É–∫–∞–∑–∞–Ω"
                promo_code = promo_code or "–ù–µ —É–∫–∞–∑–∞–Ω"
                status = status or "–ù–µ —É–∫–∞–∑–∞–Ω"
                user_role = user_role or "–ù–µ —É–∫–∞–∑–∞–Ω"
                
                response += (
                    f"{i}. üë§ {full_name}\n"
                    f"   üÜî TG ID: {telegram_id}\n"
                    f"   üé´ –ü—Ä–æ–º–æ–∫–æ–¥: {promo_code}\n"
                    f"   üìÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {reg_date_str}\n"
                    f"   üè∑Ô∏è –†–æ–ª—å: {user_role}\n"
                    f"   üìä –°—Ç–∞—Ç—É—Å: {status}\n"
                    f"   {'‚îÄ' * 30}\n"
                )
            
            # –†–∞–∑–±–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏, –µ—Å–ª–∏ –æ–Ω–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ
            if len(response) > 4000:
                parts = [response[i:i+4000] for i in range(0, len(response), 4000)]
                for part in parts:
                    await message.answer(part)
                    # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
                    import asyncio
                    await asyncio.sleep(0.5)
            else:
                await message.answer(response)
            
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        print(f"–û—à–∏–±–∫–∞: {e}")