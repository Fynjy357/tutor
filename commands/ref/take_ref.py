from aiogram import Router, types
from aiogram.filters import Command
from aiogram.types import Message
from database import db
from commands.config import SUPER_ADMIN_ID

router = Router()

@router.message(Command("ref"))
async def admin_referral_info(message: Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–æ–º
    if message.from_user.id != SUPER_ADMIN_ID:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã
    if message.text and len(message.text.split()) > 1:
        args = message.text.split()[1:]
        telegram_id = args[0] if args else None
    else:
        await message.answer("‚ùå –£–∫–∞–∂–∏—Ç–µ Telegram ID —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞: /ref <telegram_id>")
        return
    
    if not telegram_id.isdigit():
        await message.answer("‚ùå Telegram ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
        return
    
    try:
        with db.get_connection() as conn:
            cursor = conn.cursor()
            
            # 1. –ù–∞—Ö–æ–¥–∏–º —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞ –ø–æ telegram_id
            cursor.execute(
                "SELECT id, full_name, phone FROM tutors WHERE telegram_id = ?", 
                (int(telegram_id),)
            )
            tutor_data = cursor.fetchone()
            
            if not tutor_data:
                await message.answer("‚ùå –†–µ–ø–µ—Ç–∏—Ç–æ—Ä —Å —Ç–∞–∫–∏–º Telegram ID –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return
            
            tutor_id, tutor_name, tutor_phone = tutor_data
            
            # 2. –ò—â–µ–º –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ —ç—Ç–æ–≥–æ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞
            cursor.execute("""
                SELECT r.id, r.referral_code, r.visited_at, r.status, 
                       r.visitor_telegram_id
                FROM referrals r
                WHERE r.referrer_id = ? AND r.status = 'active'
                ORDER BY r.visited_at DESC
            """, (tutor_id,))
            
            referrals = cursor.fetchall()
            
            if not referrals:
                response = (
                    f"üìä –†–µ—Ñ–µ—Ä–∞–ª—ã —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞: {tutor_name}\n"
                    f"üë§ Telegram ID: {telegram_id}\n"
                    f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {tutor_phone}\n"
                    f"üÜî ID –≤ —Å–∏—Å—Ç–µ–º–µ: {tutor_id}\n\n"
                    f"‚ùå –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
                )
            else:
                response = (
                    f"üìä –†–µ—Ñ–µ—Ä–∞–ª—ã —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞: {tutor_name}\n"
                    f"üë§ Telegram ID: {telegram_id}\n"
                    f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {tutor_phone}\n"
                    f"üÜî ID –≤ —Å–∏—Å—Ç–µ–º–µ: {tutor_id}\n\n"
                    f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {len(referrals)}\n\n"
                )
                
                for i, ref in enumerate(referrals, 1):
                    ref_id, code, visited_at, status, visitor_tg_id = ref
                    
                    # –ò—â–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                    cursor.execute(
                        "SELECT full_name, phone FROM tutors WHERE telegram_id = ?",
                        (visitor_tg_id,)
                    )
                    invited_tutor = cursor.fetchone()
                    
                    if invited_tutor:
                        invited_name, invited_phone = invited_tutor
                    else:
                        invited_name = "–ù–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω"
                        invited_phone = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
                    
                    response += (
                        f"{i}. –§–ò–û: {invited_name}\n"
                        f"   üìû –¢–µ–ª–µ—Ñ–æ–Ω: {invited_phone}\n"
                        f"   üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: {code}\n"
                        f"   üìÖ –î–∞—Ç–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞: {visited_at}\n"
                        f"   ---\n"
                    )
            
            await message.answer(response)
            
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {e}")
        print(f"–û—à–∏–±–∫–∞: {e}")