import logging
from datetime import datetime
from database import db

logger = logging.getLogger(__name__)

async def get_upcoming_lessons_text(tutor_id: int) -> str:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –Ω–µ–¥–µ–ª—é —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π"""
    lessons = db.get_upcoming_lessons(tutor_id)
    
    if not lessons:
        return "üìÖ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π</b>\n\n–ù–∞ –±–ª–∏–∂–∞–π—à—É—é –Ω–µ–¥–µ–ª—é –∑–∞–Ω—è—Ç–∏–π –Ω–µ—Ç."
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∑–∞–Ω—è—Ç–∏—è –ø–æ –¥–∞—Ç–µ+–≤—Ä–µ–º–µ–Ω–∏ –∏ –≥—Ä—É–ø–ø–µ
    schedule_dict = {}
    
    for lesson in lessons:
        lesson_date = datetime.strptime(lesson['lesson_date'], '%Y-%m-%d %H:%M:%S')
        time_key = lesson_date.strftime('%Y-%m-%d %H:%M')
        group_id = lesson.get('group_id')
        
        if time_key not in schedule_dict:
            schedule_dict[time_key] = {
                'datetime': lesson_date,
                'individual_lessons': [],
                'group_lessons': {}
            }
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –∑–∞–Ω—è—Ç–∏—è
        if group_id:
            if group_id not in schedule_dict[time_key]['group_lessons']:
                # –ü–†–ê–í–ò–õ–¨–ù–û –ø–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –∏–∑ –±–∞–∑—ã
                group_info = db.get_group_by_id(group_id)
                group_name = group_info['name'] if group_info else f'–ì—Ä—É–ø–ø–∞ #{group_id}'
                
                schedule_dict[time_key]['group_lessons'][group_id] = {
                    'group_name': group_name,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
                    'students': set(),
                    'duration': lesson['duration'],
                    'price': lesson['price'],
                    'status': lesson['status']
                }
            # –î–æ–±–∞–≤–ª—è–µ–º —É—á–µ–Ω–∏–∫–∞ –≤ set
            schedule_dict[time_key]['group_lessons'][group_id]['students'].add(lesson['student_name'])
        else:
            schedule_dict[time_key]['individual_lessons'].append(lesson)
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    schedule_text = "üìÖ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π –Ω–∞ –Ω–µ–¥–µ–ª—é</b>\n\n"
    
    for time_key in sorted(schedule_dict.keys()):
        slot_data = schedule_dict[time_key]
        display_time = slot_data['datetime'].strftime('%d.%m %H:%M')
        
        schedule_text += f"üïê <b>{display_time}</b>\n"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥—Ä—É–ø–ø–æ–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è
        for group_id, group_data in slot_data['group_lessons'].items():
            schedule_text += f"üë• <b>–ì—Ä—É–ø–ø–∞: {group_data['group_name']}</b>\n"
            schedule_text += f"‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {group_data['duration']} –º–∏–Ω\n"
            schedule_text += f"üí∞ –¶–µ–Ω–∞: {group_data['price']} —Ä—É–±\n"
            schedule_text += f"üìä –°—Ç–∞—Ç—É—Å: {group_data['status']}\n"
            schedule_text += f"üë®‚Äçüéì –£—á–µ–Ω–∏–∫–æ–≤: {len(group_data['students'])}\n"
            
            # –°–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤
            students = ", ".join(sorted(group_data['students']))
            schedule_text += f"üéì –£—á–µ–Ω–∏–∫–∏: {students}\n"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è
        for lesson in slot_data['individual_lessons']:
            schedule_text += f"üë§ {lesson['student_name']}\n"
            schedule_text += f"‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {lesson['duration']} –º–∏–Ω\n"
            schedule_text += f"üí∞ –¶–µ–Ω–∞: {lesson['price']} —Ä—É–±\n"
            schedule_text += f"üìä –°—Ç–∞—Ç—É—Å: {lesson['status']}\n"
        
        schedule_text += "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n"
    
    schedule_text += "\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    
    return schedule_text


# –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
async def get_today_schedule_text(tutor_id: int) -> str:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è"""
    from datetime import datetime
    today = datetime.now().strftime('%Y-%m-%d')
    lessons = db.get_lessons_by_date(tutor_id, today)
    
    if not lessons:
        return "–£ –≤–∞—Å —Å–µ–≥–æ–¥–Ω—è –Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –∑–∞–Ω—è—Ç–∏–π."
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∑–∞–Ω—è—Ç–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏
    schedule_dict = {}
    
    for lesson in lessons:
        lesson_date = datetime.strptime(lesson['lesson_date'], '%Y-%m-%d %H:%M:%S')
        time_key = lesson_date.strftime('%H:%M')
        group_id = lesson.get('group_id')
        
        if time_key not in schedule_dict:
            schedule_dict[time_key] = {
                'datetime': lesson_date,
                'individual_lessons': [],
                'group_lessons': {}
            }
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –∑–∞–Ω—è—Ç–∏—è
        if group_id:
            if group_id not in schedule_dict[time_key]['group_lessons']:
                # –ü–†–ê–í–ò–õ–¨–ù–û –ø–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –∏–∑ –±–∞–∑—ã
                group_info = db.get_group_by_id(group_id)
                group_name = group_info['name'] if group_info else f'–ì—Ä—É–ø–ø–∞ #{group_id}'
                
                schedule_dict[time_key]['group_lessons'][group_id] = {
                    'group_name': group_name,
                    'students': set(),  # –ò—Å–ø–æ–ª—å–∑—É–µ–º set –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
                    'duration': lesson['duration'],
                    'price': lesson['price'],
                    'status': lesson['status']
                }
            # –î–æ–±–∞–≤–ª—è–µ–º —É—á–µ–Ω–∏–∫–∞ –≤ set (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–±–∏—Ä–∞–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç—ã)
            schedule_dict[time_key]['group_lessons'][group_id]['students'].add(lesson['student_name'])
        else:
            schedule_dict[time_key]['individual_lessons'].append(lesson)
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    schedule_text = "–í–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n"
    
    for time_key in sorted(schedule_dict.keys()):
        slot_data = schedule_dict[time_key]
        display_time = slot_data['datetime'].strftime('%H:%M')
        
        schedule_text += f"üïê <b>{display_time}</b>\n"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥—Ä—É–ø–ø–æ–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è
        for group_id, group_data in slot_data['group_lessons'].items():
            schedule_text += f"üë• <b>–ì—Ä—É–ø–ø–∞: {group_data['group_name']}</b>\n"
            schedule_text += f"‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {group_data['duration']} –º–∏–Ω\n"
            schedule_text += f"üí∞ –¶–µ–Ω–∞: {group_data['price']} —Ä—É–±\n"
            schedule_text += f"üìä –°—Ç–∞—Ç—É—Å: {group_data['status']}\n"
            schedule_text += f"üë®‚Äçüéì –£—á–µ–Ω–∏–∫–æ–≤: {len(group_data['students'])}\n"
            
            # –°–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤ (–ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º set –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫)
            students = ", ".join(sorted(group_data['students']))
            schedule_text += f"üéì –£—á–µ–Ω–∏–∫–∏: {students}\n"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è
        for lesson in slot_data['individual_lessons']:
            schedule_text += f"üë§ {lesson['student_name']}\n"
            schedule_text += f"‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {lesson['duration']} –º–∏–Ω\n"
            schedule_text += f"üí∞ –¶–µ–Ω–∞: {lesson['price']} —Ä—É–±\n"
            schedule_text += f"üìä –°—Ç–∞—Ç—É—Å: {lesson['status']}\n"
        
        schedule_text += "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n"
    
    return schedule_text