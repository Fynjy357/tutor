import logging
from datetime import datetime
from database import db

logger = logging.getLogger(__name__)

async def get_upcoming_lessons_text(tutor_id: int) -> str:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –Ω–µ–¥–µ–ª—é —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π"""
    lessons = db.get_upcoming_lessons(tutor_id)
    
    if not lessons:
        return "üìÖ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π</b>\n\n–ù–∞ –±–ª–∏–∂–∞–π—à—É—é –Ω–µ–¥–µ–ª—é –∑–∞–Ω—è—Ç–∏–π –Ω–µ—Ç."
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∑–∞–Ω—è—Ç–∏—è –ø–æ –¥–∞—Ç–µ+–≤—Ä–µ–º–µ–Ω–∏ –∏ –≥—Ä—É–ø–ø–µ
    schedule_dict = {}
    
    for lesson in lessons:
        lesson_date = datetime.strptime(lesson['lesson_date'], '%Y-%m-%d %H:%M:%S')
        time_key = lesson_date.strftime('%Y-%m-%d %H:%M')
        group_id = lesson.get('group_id')
        lesson_id = lesson['id']  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –∑–∞–Ω—è—Ç–∏—è
        
        if time_key not in schedule_dict:
            schedule_dict[time_key] = {
                'datetime': lesson_date,
                'individual_lessons': {},  # –ú–µ–Ω—è–µ–º –Ω–∞ —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
                'group_lessons': {}
            }
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –∑–∞–Ω—è—Ç–∏—è
        if group_id:
            if group_id not in schedule_dict[time_key]['group_lessons']:
                group_info = db.get_group_by_id(group_id)
                group_name = group_info['name'] if group_info else f'–ì—Ä—É–ø–ø–∞ #{group_id}'
                
                schedule_dict[time_key]['group_lessons'][group_id] = {
                    'group_name': group_name,
                    'students': set(),
                    'duration': lesson['duration'],
                    'price': lesson['price'],
                    'status': lesson['status']
                }
            schedule_dict[time_key]['group_lessons'][group_id]['students'].add(lesson['student_name'])
        else:
            # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –∑–∞–Ω—è—Ç–∏—è –∫–∞–∫ –∫–ª—é—á
            if lesson_id not in schedule_dict[time_key]['individual_lessons']:
                schedule_dict[time_key]['individual_lessons'][lesson_id] = lesson
            else:
                logger.warning(f"‚ö†Ô∏è –î—É–±–ª–∏–∫–∞—Ç –∑–∞–Ω—è—Ç–∏—è ID {lesson_id} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–ª—è –≤—Ä–µ–º–µ–Ω–∏ {time_key}")
    
    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
    days_of_week = {
        'Monday': '–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
        'Tuesday': '–≤—Ç–æ—Ä–Ω–∏–∫', 
        'Wednesday': '—Å—Ä–µ–¥–∞',
        'Thursday': '—á–µ—Ç–≤–µ—Ä–≥',
        'Friday': '–ø—è—Ç–Ω–∏—Ü–∞',
        'Saturday': '—Å—É–±–±–æ—Ç–∞',
        'Sunday': '–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
    }
    
    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –º–µ—Å—è—Ü–µ–≤
    months = {
        1: '—è–Ω–≤–∞—Ä—è', 2: '—Ñ–µ–≤—Ä–∞–ª—è', 3: '–º–∞—Ä—Ç–∞', 4: '–∞–ø—Ä–µ–ª—è',
        5: '–º–∞—è', 6: '–∏—é–Ω—è', 7: '–∏—é–ª—è', 8: '–∞–≤–≥—É—Å—Ç–∞',
        9: '—Å–µ–Ω—Ç—è–±—Ä—è', 10: '–æ–∫—Ç—è–±—Ä—è', 11: '–Ω–æ—è–±—Ä—è', 12: '–¥–µ–∫–∞–±—Ä—è'
    }
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –¥–Ω—è–º
    days_dict = {}
    for time_key, slot_data in schedule_dict.items():
        date_obj = slot_data['datetime']
        day_key = date_obj.strftime('%Y-%m-%d')
        
        if day_key not in days_dict:
            days_dict[day_key] = {
                'date': date_obj,
                'time_slots': {}
            }
        
        days_dict[day_key]['time_slots'][time_key] = slot_data
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    schedule_text = "üìÖ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ 14 –¥–Ω–µ–π</b>\n\n"
    
    for day_key in sorted(days_dict.keys()):
        day_data = days_dict[day_key]
        date_obj = day_data['date']
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É: "25 —Å–µ–Ω—Ç—è–±—Ä—è, –≤—Ç–æ—Ä–Ω–∏–∫"
        day_number = date_obj.day
        month_name = months[date_obj.month]
        day_of_week_en = date_obj.strftime('%A')
        day_of_week_ru = days_of_week.get(day_of_week_en, day_of_week_en)
        
        schedule_text += f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        schedule_text += f"üóìÔ∏è <b>**{day_number} {month_name}, {day_of_week_ru}**</b>\n"
        schedule_text += f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n"
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã
        for time_key in sorted(day_data['time_slots'].keys()):
            slot_data = day_data['time_slots'][time_key]
            display_time = slot_data['datetime'].strftime('%H:%M')
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è
            for lesson_id, lesson in slot_data['individual_lessons'].items():
                schedule_text += f"<b>**{display_time}**</b> ‚îÇ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ\n"
                schedule_text += f"üë§ **{lesson['student_name']}**\n"
                schedule_text += f"‚è±Ô∏è {lesson['duration']} –º–∏–Ω ‚îÇ üí∞ {lesson['price']} —Ä—É–±\n\n"
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥—Ä—É–ø–ø–æ–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è
            for group_id, group_data in slot_data['group_lessons'].items():
                schedule_text += f"<b>**{display_time}**</b> ‚îÇ –ì—Ä—É–ø–ø–æ–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ\n"
                schedule_text += f"üë• **{group_data['group_name']}** ({len(group_data['students'])} —É—á–µ–Ω–∏–∫–∞)\n"
                schedule_text += f"‚è±Ô∏è {group_data['duration']} –º–∏–Ω ‚îÇ üí∞ {group_data['price']} —Ä—É–±\n"
                
                # –£—á–µ–Ω–∏–∫–∏ –±–µ–∑ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π - –∫–∞–∫ –µ—Å—Ç—å –≤ –±–∞–∑–µ
                students = ", ".join(sorted(group_data['students']))
                schedule_text += f"üéì {students}\n\n"
        
        schedule_text += "\n"
    
    schedule_text += "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    
    return schedule_text



# –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
async def get_today_schedule_text(tutor_id: int) -> str:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –≤ –Ω–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
    from datetime import datetime, date, timedelta
    
    today = datetime.now().strftime('%Y-%m-%d')
    lessons = db.get_lessons_by_date(tutor_id, today)
    
    # –†—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏ –∏ –º–µ—Å—è—Ü–µ–≤
    weekday_names = {
        0: "–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", 1: "–≤—Ç–æ—Ä–Ω–∏–∫", 2: "—Å—Ä–µ–¥–∞", 3: "—á–µ—Ç–≤–µ—Ä–≥",
        4: "–ø—è—Ç–Ω–∏—Ü–∞", 5: "—Å—É–±–±–æ—Ç–∞", 6: "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"
    }
    
    month_names = {
        1: "—è–Ω–≤–∞—Ä—è", 2: "—Ñ–µ–≤—Ä–∞–ª—è", 3: "–º–∞—Ä—Ç–∞", 4: "–∞–ø—Ä–µ–ª—è",
        5: "–º–∞—è", 6: "–∏—é–Ω—è", 7: "–∏—é–ª—è", 8: "–∞–≤–≥—É—Å—Ç–∞",
        9: "—Å–µ–Ω—Ç—è–±—Ä—è", 10: "–æ–∫—Ç—è–±—Ä—è", 11: "–Ω–æ—è–±—Ä—è", 12: "–¥–µ–∫–∞–±—Ä—è"
    }
    
    current_date = datetime.now()
    day_name = weekday_names[current_date.weekday()]
    date_str = f"{current_date.day} {month_names[current_date.month]}, {day_name}"
    
    if not lessons:
        # –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        current_month = datetime.now().month
        current_year = datetime.now().year
        
        current_month_earnings = db.get_earnings_by_period(
            tutor_id, 
            date(current_year, current_month, 1), 
            datetime.now().date()
        )
        
        if current_month == 1:
            prev_month = 12
            prev_year = current_year - 1
        else:
            prev_month = current_month - 1
            prev_year = current_year
        
        prev_month_earnings = db.get_earnings_by_period(
            tutor_id,
            date(prev_year, prev_month, 1),
            date(prev_year, prev_month, 1).replace(day=28) + timedelta(days=4)
        )
        
        active_students_count = db.get_active_students_count(tutor_id)
        
        return (
            f"üìÖ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è</b>\n"
            f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
            f"üóìÔ∏è <b>{date_str.capitalize()}</b>\n"
            f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n"
            f"üì≠ <b>–ó–∞–Ω—è—Ç–∏–π –Ω–µ—Ç</b>\n\n"
            f"üë®‚Äçüéì <b>–ê–∫—Ç–∏–≤–Ω—ã—Ö —É—á–µ–Ω–∏–∫–æ–≤:</b> {active_students_count}\n"
            f"üí∞ <b>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –≤ {month_names[current_month]}:</b> {current_month_earnings} —Ä—É–±\n"
            f"üìä <b>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –≤ {month_names[prev_month]}:</b> {prev_month_earnings} —Ä—É–±"
        )
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∑–∞–Ω—è—Ç–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏
    schedule_dict = {}
    
    for lesson in lessons:
        lesson_date = datetime.strptime(lesson['lesson_date'], '%Y-%m-%d %H:%M:%S')
        time_key = lesson_date.strftime('%H:%M')
        group_id = lesson.get('group_id')
        lesson_id = lesson['id']
        
        if time_key not in schedule_dict:
            schedule_dict[time_key] = {
                'datetime': lesson_date,
                'individual_lessons': {},
                'group_lessons': {}
            }
        
        if group_id:
            if group_id not in schedule_dict[time_key]['group_lessons']:
                group_info = db.get_group_by_id(group_id)
                group_name = group_info['name'] if group_info else f'–ì—Ä—É–ø–ø–∞ #{group_id}'
                
                schedule_dict[time_key]['group_lessons'][group_id] = {
                    'group_name': group_name,
                    'students': set(),
                    'duration': lesson['duration'],
                    'price': lesson['price'],
                    'status': lesson['status']
                }
            schedule_dict[time_key]['group_lessons'][group_id]['students'].add(lesson['student_name'])
        else:
            if lesson_id not in schedule_dict[time_key]['individual_lessons']:
                schedule_dict[time_key]['individual_lessons'][lesson_id] = lesson
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ –Ω–æ–≤–æ–º —Å—Ç–∏–ª–µ
    schedule_text = (
        f"üìÖ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è</b>\n"
        f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        f"üóìÔ∏è <b>{date_str.capitalize()}</b>\n"
        f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\n"
    )
    
    for time_key in sorted(schedule_dict.keys()):
        slot_data = schedule_dict[time_key]
        display_time = slot_data['datetime'].strftime('%H:%M')
        
        # –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è
        for lesson_id, lesson in slot_data['individual_lessons'].items():
            schedule_text += (
                f"<b>{display_time}</b> ‚îÇ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ\n"
                f"üë§ <b>{lesson['student_name']}</b>\n"
                f"‚è±Ô∏è {lesson['duration']} –º–∏–Ω ‚îÇ üí∞ {int(lesson['price'])} —Ä—É–±\n\n"
            )
        
        # –ì—Ä—É–ø–ø–æ–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è
        for group_id, group_data in slot_data['group_lessons'].items():
            student_count = len(group_data['students'])
            students_text = ", ".join(sorted(group_data['students']))
            
            schedule_text += (
                f"<b>{display_time}</b> ‚îÇ –ì—Ä—É–ø–ø–æ–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ\n"
                f"üë• <b>{group_data['group_name']}</b> ({student_count} —É—á–µ–Ω–∏–∫–∞)\n"
                f"‚è±Ô∏è {group_data['duration']} –º–∏–Ω ‚îÇ üí∞ {int(group_data['price'])} —Ä—É–±\n"
                f"üéì {students_text}\n\n"
            )
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    current_month = datetime.now().month
    current_year = datetime.now().year
    
    current_month_earnings = db.get_earnings_by_period(
        tutor_id, 
        date(current_year, current_month, 1), 
        datetime.now().date()
    )
    
    if current_month == 1:
        prev_month = 12
        prev_year = current_year - 1
    else:
        prev_month = current_month - 1
        prev_year = current_year
    
    prev_month_earnings = db.get_earnings_by_period(
        tutor_id,
        date(prev_year, prev_month, 1),
        date(prev_year, prev_month, 1).replace(day=28) + timedelta(days=4)
    )
    
    active_students_count = db.get_active_students_count(tutor_id)
    
    schedule_text += (
        f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"
        f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>\n\n"
        f"üë®‚Äçüéì <b>–ê–∫—Ç–∏–≤–Ω—ã—Ö —É—á–µ–Ω–∏–∫–æ–≤:</b> {active_students_count}\n"
        f"üí∞ <b>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –≤ {month_names[current_month]}:</b> {current_month_earnings} —Ä—É–±\n"
        f"üìà <b>–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –≤ {month_names[prev_month]}:</b> {prev_month_earnings} —Ä—É–±"
    )
    
    return schedule_text

