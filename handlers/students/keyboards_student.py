# keyboards/keyboards_student.py
from aiogram import types
from aiogram.utils.keyboard import InlineKeyboardBuilder
from datetime import datetime
import math
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

def get_students_menu_keyboard():
    builder = InlineKeyboardBuilder()
    
    builder.row(
        types.InlineKeyboardButton(
            text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—á–µ–Ω–∏–∫–∞",
            callback_data="add_student"
        )
    )
    
    builder.row(
        types.InlineKeyboardButton(
            text="üìã –°–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤",
            callback_data="students_list"
        )
    )
    
    builder.row(
        types.InlineKeyboardButton(
            text="üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç—ã",
            callback_data="edit_reports"
        )
    )
    
    builder.row(
        types.InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            callback_data="back_to_main_students"
        )
    )
    
    return builder.as_markup()

def get_cancel_keyboard_add_students():
    builder = InlineKeyboardBuilder()
    builder.row(
        types.InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
            callback_data="cancel_operation"
        )
    )
    return builder.as_markup()

def get_students_list_menu_keyboard():  # –ò–ó–ú–ï–ù–ï–ù–û –ò–ú–Ø –§–£–ù–ö–¶–ò–ò
    builder = InlineKeyboardBuilder()
    
    builder.row(
        types.InlineKeyboardButton(
            text="üìã –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—á–µ–Ω–∏–∫–æ–≤",
            callback_data="all_students"
        )
    )
    
    builder.row(
        types.InlineKeyboardButton(
            text="üë§ –ê–∫—Ç–∏–≤–Ω—ã–µ —É—á–µ–Ω–∏–∫–∏",
            callback_data="active_students"
        )
    )
    
    builder.row(
        types.InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é —É—á–µ–Ω–∏–∫–æ–≤",
            callback_data="back_to_students_menu"
        )
    )
    
    return builder.as_markup()

def get_students_pagination_keyboard(students, page=0, page_size=5):
    builder = InlineKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É—á–µ–Ω–∏–∫–æ–≤ –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    start_idx = page * page_size
    end_idx = start_idx + page_size
    current_page_students = students[start_idx:end_idx]
    
    for student in current_page_students:
        builder.row(
            types.InlineKeyboardButton(
                text=f"üë§ {student['full_name']}",
                callback_data=f"student_{student['id']}"
            )
        )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if len(students) > page_size:
        navigation_buttons = []
        
        if page > 0:
            navigation_buttons.append(
                types.InlineKeyboardButton(
                    text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                    callback_data=f"students_page_{page-1}"
                )
            )
        
        if end_idx < len(students):
            navigation_buttons.append(
                types.InlineKeyboardButton(
                    text="‚û°Ô∏è –í–ø–µ—Ä–µ–¥",
                    callback_data=f"students_page_{page+1}"
                )
            )
        
        if navigation_buttons:
            builder.row(*navigation_buttons)
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
    builder.row(
        types.InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é —É—á–µ–Ω–∏–∫–æ–≤",
            callback_data="back_to_students_menu"
        )
    )
    
    return builder.as_markup()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤
def get_dates_keyboard(dates, page=0, total_pages=1):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–∞—Ç–∞–º–∏ –∑–∞–Ω—è—Ç–∏–π"""
    builder = InlineKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å –¥–∞—Ç–∞–º–∏ (–º–∞–∫—Å–∏–º—É–º 6 –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É)
    for date in dates[page*6:(page+1)*6]:
        builder.row(
            types.InlineKeyboardButton(
                text=date.strftime("%d.%m.%Y"),
                callback_data=f"report_date_{date.strftime('%Y-%m-%d')}"
            )
        )
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    nav_buttons = []
    if page > 0:
        nav_buttons.append(
            types.InlineKeyboardButton(
                text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
                callback_data=f"reports_page_{page-1}"
            )
        )
    if page < total_pages - 1:
        nav_buttons.append(
            types.InlineKeyboardButton(
                text="–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è",
                callback_data=f"reports_page_{page+1}"
            )
        )
    
    if nav_buttons:
        builder.row(*nav_buttons)
    
    builder.row(
        types.InlineKeyboardButton(
            text="‚óÄÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            callback_data="back_to_students_menu"
        )
    )
    
    return builder.as_markup()

def get_reports_keyboard(reports: list, page: int, total_pages: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ—Ç—á–µ—Ç–∞ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    keyboard = InlineKeyboardBuilder()
    
    # –î–û–ë–ê–í–¨–¢–ï –ü–ê–ì–ò–ù–ê–¶–ò–Æ –î–õ–Ø –û–¢–ß–ï–¢–û–í!
    start_idx = page * 6
    end_idx = start_idx + 6
    current_page_reports = reports[start_idx:end_idx]
    
    for report in current_page_reports:  # –ò—Å–ø–æ–ª—å–∑—É–µ–º current_page_reports –≤–º–µ—Å—Ç–æ reports
        # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–∞
        time_str = report.get('time', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
        student_name = report.get('student_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —É—á–µ–Ω–∏–∫')
        
        keyboard.row(
            InlineKeyboardButton(
                text=f"{time_str} - {student_name}",
                callback_data=f"select_report:{report['id']}"
            )
        )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    pagination_buttons = []
    if page > 0:
        pagination_buttons.append(
            InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"reports_list_page_{page-1}")
        )
    if page < total_pages - 1:
        pagination_buttons.append(
            InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"reports_list_page_{page+1}")
        )
    
    if pagination_buttons:
        keyboard.row(*pagination_buttons)
    
    keyboard.row(
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_dates")
    )
    
    return keyboard.as_markup()

def get_report_edit_keyboard(report_id):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞"""
    builder = InlineKeyboardBuilder()
    
    builder.row(
        types.InlineKeyboardButton(
            text="‚úÖ –ü—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞ –∑–∞–Ω—è—Ç–∏–∏",
            callback_data=f"toggle_attendance_{report_id}"
        )
    )
    
    builder.row(
        types.InlineKeyboardButton(
            text="üí∞ –û–ø–ª–∞—Ç–∞ –∑–∞–Ω—è—Ç–∏—è",
            callback_data=f"toggle_payment_{report_id}"
        )
    )
    
    builder.row(
        types.InlineKeyboardButton(
            text="üìö –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ",
            callback_data=f"toggle_homework_{report_id}"
        )
    )
    
    builder.row(
        types.InlineKeyboardButton(
            text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π",
            callback_data=f"edit_comment_{report_id}"
        )
    )
    
    builder.row(
        types.InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –æ—Ç—á–µ—Ç–∞–º",
            callback_data="back_to_reports"
        )
    )
    
    return builder.as_markup()

def get_cancel_edit_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    builder = InlineKeyboardBuilder()
    builder.row(
        types.InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ",
            callback_data="cancel_edit"
        )
    )
    return builder.as_markup()