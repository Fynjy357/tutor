from aiogram import Router, types
from aiogram.filters import Command

from keyboards.registration import get_registration_keyboard
from keyboards.main_menu import get_main_menu_keyboard  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ –º–µ–Ω—é
from database import db

router = Router()

@router.message(Command("start"))
async def cmd_start(message: types.Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    existing_tutor = db.get_tutor_by_telegram_id(message.from_user.id)
    
    if existing_tutor:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
        welcome_text = f"""
<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞–∑–∞–¥, {existing_tutor[2]}!</b>

–†–∞–¥—ã —Å–Ω–æ–≤–∞ –≤–∏–¥–µ—Ç—å –≤–∞—Å –≤ –µ–∂–µ–¥–Ω–µ–≤–Ω–∏–∫–µ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞.

–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:
üìù –§–ò–û: {existing_tutor[2]}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: {existing_tutor[3]}
üé´ –ü—Ä–æ–º–æ–∫–æ–¥: {existing_tutor[4] if existing_tutor[4] != '0' else '–Ω–µ —É–∫–∞–∑–∞–Ω'}

–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:
"""
        await message.answer(
            welcome_text,
            reply_markup=get_main_menu_keyboard(),
            parse_mode="HTML"
        )
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        welcome_text = """
<b>–ï–∂–µ–¥–Ω–µ–≤–Ω–∏–∫ —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞</b>

–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç –¥–ª—è —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–≤

üî≤ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –±–æ—Ç–µ
‚úÖ –ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ...
"""
        
        await message.answer(
            welcome_text,
            reply_markup=get_registration_keyboard(),
            parse_mode="HTML"
        )

# –î–æ–±–∞–≤–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ (–ø—É—Å—Ç—ã–µ, –±–µ–∑ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞)
@router.callback_query(lambda c: c.data in ["schedule", "students", "groups", "payments", "settings"])
async def process_main_menu(callback_query: types.CallbackQuery):
    await callback_query.answer()
    
    # –í—Ä–µ–º–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–æ–∫
    menu_responses = {
        "schedule": "–†–∞–∑–¥–µ–ª '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π' –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.",
        "students": "–†–∞–∑–¥–µ–ª '–£—á–µ—Ç —É—á–µ–Ω–∏–∫–æ–≤' –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.",
        "groups": "–†–∞–∑–¥–µ–ª '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø–∞–º–∏' –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.",
        "payments": "–†–∞–∑–¥–µ–ª '–û–ø–ª–∞—Ç—ã' –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.",
        "settings": "–†–∞–∑–¥–µ–ª '–ù–∞—Å—Ç—Ä–æ–π–∫–∏' –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ."
    }
    
    await callback_query.message.answer(menu_responses[callback_query.data])