from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.types import Message
from handlers.groups.state import GroupStates
from database import db
from handlers.groups.keyboards import *

router = Router()

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã
@router.callback_query(F.data == "save_group")
async def save_group(callback_query: CallbackQuery, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–π –≥—Ä—É–ø–ø—ã"""
    await callback_query.answer()
    
    data = await state.get_data()
    group_name = data.get('group_name')
    tutor_id = db.get_tutor_id_by_telegram_id(callback_query.from_user.id)
    
    if group_name and tutor_id:
        group_id = db.add_group(group_name, tutor_id)
        text = f"‚úÖ –ì—Ä—É–ø–ø–∞ —Å–æ–∑–¥–∞–Ω–∞!\n–ù–∞–∑–≤–∞–Ω–∏–µ: {group_name}" if group_id else "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏!"
    else:
        text = "‚ùå –û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö!"
    
    await callback_query.message.edit_text(text)
    await state.clear()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≥—Ä—É–ø–ø –∫–∞–∫ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await callback_query.message.answer(
        "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø–∞–º–∏</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_groups_main_menu_keyboard(),
        parse_mode="HTML"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã
@router.callback_query(F.data.startswith("delete_group_"))
async def delete_group_confirmation(callback_query: CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã"""
    await callback_query.answer()
    
    group_id = int(callback_query.data.split("_")[2])
    group = db.get_group_by_id(group_id)
    
    await callback_query.message.edit_text(
        f"‚ö†Ô∏è <b>–£–¥–∞–ª–∏—Ç—å –≥—Ä—É–ø–ø—É?</b>\n\n{group['name']}\n\n–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!",
        reply_markup=get_delete_confirmation_keyboard(group_id),
        parse_mode="HTML"
    )

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã
@router.callback_query(F.data.startswith("confirm_delete_"))
async def confirm_delete_group(callback_query: CallbackQuery, state: FSMContext):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã"""
    await callback_query.answer()
    
    group_id = int(callback_query.data.split("_")[2])
    group = db.get_group_by_id(group_id)
    
    success = db.delete_group(group_id)
    text = f"‚úÖ –ì—Ä—É–ø–ø–∞ —É–¥–∞–ª–µ–Ω–∞!\n{group['name']}" if success else "‚ùå –û—à–∏–±–∫–∞!"
    
    await callback_query.message.edit_text(text)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≥—Ä—É–ø–ø –∫–∞–∫ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await callback_query.message.answer(
        "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø–∞–º–∏</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_groups_main_menu_keyboard(),
        parse_mode="HTML"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã
@router.callback_query(F.data.startswith("edit_group_"))
async def edit_group_name(callback_query: CallbackQuery, state: FSMContext):
    """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã"""
    await callback_query.answer()
    
    group_id = int(callback_query.data.split("_")[2])
    group = db.get_group_by_id(group_id)
    
    await callback_query.message.edit_text(
        f"‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã</b>\n\n"
        f"–¢–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: {group['name']}\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:",
        reply_markup=get_back_to_groups_menu_keyboard(),
        parse_mode="HTML"
    )
    await state.set_state(GroupStates.editing_group)
    await state.update_data(editing_group_id=group_id)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–≤–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã
@router.message(GroupStates.editing_group)
async def process_new_group_name(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã"""
    new_name = message.text.strip()
    data = await state.get_data()
    group_id = data.get('editing_group_id')
    
    if len(new_name) > 50:
        await message.answer("‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ! –ú–∞–∫—Å–∏–º—É–º 50 —Å–∏–º–≤–æ–ª–æ–≤.")
        return
    
    success = db.update_group_name(group_id, new_name)
    text = f"‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!\n{new_name}" if success else "‚ùå –û—à–∏–±–∫–∞!"
    
    await message.answer(text)
    await state.clear()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≥—Ä—É–ø–ø –∫–∞–∫ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.answer(
        "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø–∞–º–∏</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_groups_main_menu_keyboard(),
        parse_mode="HTML"
    )