"""–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""

import asyncio
from datetime import datetime, timedelta
import logging

logger = logging.getLogger(__name__)

async def lesson_notification_scheduler(bot, notification_manager):
    """–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∑–∞–Ω—è—Ç–∏—è—Ö"""
    logger.info("üöÄ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∑–∞–ø—É—â–µ–Ω")
    
    while True:
        try:
            lessons_to_notify = notification_manager.get_upcoming_lessons_for_notification()
            logger.info(f"üìã –ù–∞–π–¥–µ–Ω–æ –∑–∞–Ω—è—Ç–∏–π –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {len(lessons_to_notify)}")
            
            for lesson in lessons_to_notify:
                # –ü–æ–ª—É—á–∞–µ–º telegram_id - –∫–ª—é—á student_telegram_id
                student_telegram_id = lesson.get('student_telegram_id')
                student_id = lesson.get('student_id')
                lesson_id = lesson.get('id')
                
                logger.info(f"üîç –ê–Ω–∞–ª–∏–∑ –∑–∞–Ω—è—Ç–∏—è #{lesson_id}: telegram_id={student_telegram_id}")
                
                if not student_telegram_id:
                    logger.warning(f"‚ö†Ô∏è –£ —É—á–µ–Ω–∏–∫–∞ –∑–∞–Ω—è—Ç–∏—è #{lesson_id} –Ω–µ —É–∫–∞–∑–∞–Ω telegram_id")
                    continue
                
                if not student_id:
                    logger.error(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω student_id –¥–ª—è –∑–∞–Ω—è—Ç–∏—è #{lesson_id}")
                    continue
                
                logger.info(f"üì© –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–Ω—è—Ç–∏–µ #{lesson_id} –¥–ª—è —É—á–µ–Ω–∏–∫–∞ {student_telegram_id} (ID: {student_id})")
                
                # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –∑–∞–Ω—è—Ç–∏—è - –∫–ª—é—á lesson_date
                lesson_time_str = lesson.get('lesson_date')
                
                if not lesson_time_str:
                    logger.error(f"‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–æ –≤—Ä–µ–º—è –∑–∞–Ω—è—Ç–∏—è #{lesson_id}")
                    continue
                
                try:
                    lesson_time = datetime.strptime(str(lesson_time_str), '%Y-%m-%d %H:%M:%S')
                    notification_time = lesson_time - timedelta(hours=24)
                    logger.info(f"‚è∞ –í—Ä–µ–º—è –∑–∞–Ω—è—Ç–∏—è: {lesson_time}, –≤—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {notification_time}")
                except ValueError as e:
                    logger.error(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–Ω—è—Ç–∏—è #{lesson_id}: {lesson_time_str}. –û—à–∏–±–∫–∞: {e}")
                    continue
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–º–µ—Ç–æ–¥ —Å–∞–º —Å–æ–∑–¥–∞—Å—Ç –∑–∞–ø–∏—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è)
                success = await notification_manager.send_notification_to_student(
                    bot, lesson, student_telegram_id
                )
                
                if success:
                    logger.info(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
                else:
                    logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
            
            # –ñ–¥–µ–º 5 –º–∏–Ω—É—Ç –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
            await asyncio.sleep(300)
            
        except Exception as e:
            logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")
            await asyncio.sleep(60)

